Ant-v5:
  trial_number: 25
  value: 2724.7973348
  params:
    batch_size: 512
    n_steps: 2048
    gamma: 0.99
    learning_rate: 0.0013931381527875178
    line_search_shrinking_factor: 0.9
    n_critic_updates: 20
    cg_max_steps: 30
    cg_damping: 0.01
    target_kl: 0.05
    gae_lambda: 0.8
    net_arch: medium
    log_std_init: -2.32457966159704
    sde_sample_freq: 256
    ortho_init: 1
    activation_fn: relu
    lr_schedule: linear
    n_timesteps: 600000
    n_envs: 6
  comment: 'Best trial details: _number=25, state=1, _values=[2724.7973348], _datetime_start=2025-01-30
    10:24:21.411666, datetime_complete=2025-01-30 11:39:19.115633, _params={''batch_size'':
    512, ''n_steps'': 2048, ''gamma'': 0.99, ''learning_rate'': 0.0013931381527875178,
    ''line_search_shrinking_factor'': 0.9, ''n_critic_updates'': 20, ''cg_max_steps'':
    30, ''cg_damping'': 0.01, ''target_kl'': 0.05, ''gae_lambda'': 0.8, ''net_arch'':
    ''medium'', ''log_std_init'': -2.32457966159704, ''sde_sample_freq'': 256, ''ortho_init'':
    True, ''activation_fn'': ''relu'', ''lr_schedule'': ''linear'', ''n_timesteps'':
    600000, ''n_envs'': 6}, _user_attrs={}, _system_attrs={''completed_rung_0'': 1883.0085261999998},
    intermediate_values={1: 1883.0085261999998, 2: 2724.7973348}, _distributions={''batch_size'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512)), ''n_steps'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512, 1024, 2048)), ''gamma'':
    CategoricalDistribution(choices=(0.9, 0.95, 0.98, 0.99, 0.995, 0.999, 0.9999)),
    ''learning_rate'': FloatDistribution(high=1.0, log=True, low=1e-05, step=None),
    ''line_search_shrinking_factor'': CategoricalDistribution(choices=(0.6, 0.7, 0.8,
    0.9)), ''n_critic_updates'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)),
    ''cg_max_steps'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)), ''cg_damping'':
    CategoricalDistribution(choices=(0.5, 0.2, 0.1, 0.05, 0.01)), ''target_kl'': CategoricalDistribution(choices=(0.1,
    0.05, 0.03, 0.02, 0.01, 0.005, 0.001)), ''gae_lambda'': CategoricalDistribution(choices=(0.8,
    0.9, 0.92, 0.95, 0.98, 0.99, 1.0)), ''net_arch'': CategoricalDistribution(choices=(''small'',
    ''medium'')), ''log_std_init'': FloatDistribution(high=1.0, log=False, low=-4.0,
    step=None), ''sde_sample_freq'': CategoricalDistribution(choices=(-1, 8, 16, 32,
    64, 128, 256)), ''ortho_init'': CategoricalDistribution(choices=(False, True)),
    ''activation_fn'': CategoricalDistribution(choices=(''tanh'', ''relu'')), ''lr_schedule'':
    CategoricalDistribution(choices=(''linear'', ''constant'')), ''n_timesteps'':
    IntDistribution(high=1000000, log=False, low=100000, step=100000), ''n_envs'':
    CategoricalDistribution(choices=(2, 4, 6, 8, 10))}, _trial_id=25'
HalfCheetah-v5:
  trial_number: 157
  value: 6307.7103228
  params:
    batch_size: 64
    n_steps: 1024
    gamma: 0.98
    learning_rate: 0.00026434776463304623
    line_search_shrinking_factor: 0.8
    n_critic_updates: 30
    cg_max_steps: 20
    cg_damping: 0.2
    target_kl: 0.01
    gae_lambda: 0.8
    net_arch: small
    log_std_init: -0.6640297978996337
    sde_sample_freq: 8
    ortho_init: 0
    activation_fn: tanh
    lr_schedule: linear
    n_timesteps: 1000000
    n_envs: 6
  comment: 'Best trial details: _number=157, state=1, _values=[6307.7103228], _datetime_start=2025-04-05
    04:54:30.407454, datetime_complete=2025-04-05 06:51:02.180397, _params={''batch_size'':
    64, ''n_steps'': 1024, ''gamma'': 0.98, ''learning_rate'': 0.00026434776463304623,
    ''line_search_shrinking_factor'': 0.8, ''n_critic_updates'': 30, ''cg_max_steps'':
    20, ''cg_damping'': 0.2, ''target_kl'': 0.01, ''gae_lambda'': 0.8, ''net_arch'':
    ''small'', ''log_std_init'': -0.6640297978996337, ''sde_sample_freq'': 8, ''ortho_init'':
    False, ''activation_fn'': ''tanh'', ''lr_schedule'': ''linear'', ''n_timesteps'':
    1000000, ''n_envs'': 6}, _user_attrs={}, _system_attrs={''completed_rung_0'':
    5486.119348}, intermediate_values={1: 5486.119348, 2: 6307.7103228}, _distributions={''batch_size'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512)), ''n_steps'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512, 1024, 2048)), ''gamma'':
    CategoricalDistribution(choices=(0.9, 0.95, 0.98, 0.99, 0.995, 0.999, 0.9999)),
    ''learning_rate'': FloatDistribution(high=1.0, log=True, low=1e-05, step=None),
    ''line_search_shrinking_factor'': CategoricalDistribution(choices=(0.6, 0.7, 0.8,
    0.9)), ''n_critic_updates'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)),
    ''cg_max_steps'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)), ''cg_damping'':
    CategoricalDistribution(choices=(0.5, 0.2, 0.1, 0.05, 0.01)), ''target_kl'': CategoricalDistribution(choices=(0.1,
    0.05, 0.03, 0.02, 0.01, 0.005, 0.001)), ''gae_lambda'': CategoricalDistribution(choices=(0.8,
    0.9, 0.92, 0.95, 0.98, 0.99, 1.0)), ''net_arch'': CategoricalDistribution(choices=(''small'',
    ''medium'')), ''log_std_init'': FloatDistribution(high=1.0, log=False, low=-4.0,
    step=None), ''sde_sample_freq'': CategoricalDistribution(choices=(-1, 8, 16, 32,
    64, 128, 256)), ''ortho_init'': CategoricalDistribution(choices=(False, True)),
    ''activation_fn'': CategoricalDistribution(choices=(''tanh'', ''relu'')), ''lr_schedule'':
    CategoricalDistribution(choices=(''linear'', ''constant'')), ''n_timesteps'':
    IntDistribution(high=1000000, log=False, low=100000, step=100000), ''n_envs'':
    CategoricalDistribution(choices=(2, 4, 6, 8, 10))}, _trial_id=157'
Hopper-v5:
  trial_number: 141
  value: 3547.8298076
  params:
    batch_size: 128
    n_steps: 512
    gamma: 0.995
    learning_rate: 0.00038231271437286544
    line_search_shrinking_factor: 0.7
    n_critic_updates: 30
    cg_max_steps: 25
    cg_damping: 0.01
    target_kl: 0.01
    gae_lambda: 0.92
    net_arch: medium
    log_std_init: 0.05575808645321584
    sde_sample_freq: -1
    ortho_init: 0
    activation_fn: tanh
    lr_schedule: linear
    n_timesteps: 900000
    n_envs: 10
  comment: 'Best trial details: _number=141, state=1, _values=[3547.8298076], _datetime_start=2025-05-13
    19:04:05.477420, datetime_complete=2025-05-13 19:46:02.115296, _params={''batch_size'':
    128, ''n_steps'': 512, ''gamma'': 0.995, ''learning_rate'': 0.00038231271437286544,
    ''line_search_shrinking_factor'': 0.7, ''n_critic_updates'': 30, ''cg_max_steps'':
    25, ''cg_damping'': 0.01, ''target_kl'': 0.01, ''gae_lambda'': 0.92, ''net_arch'':
    ''medium'', ''log_std_init'': 0.05575808645321584, ''sde_sample_freq'': -1, ''ortho_init'':
    False, ''activation_fn'': ''tanh'', ''lr_schedule'': ''linear'', ''n_timesteps'':
    900000, ''n_envs'': 10}, _user_attrs={}, _system_attrs={''completed_rung_0'':
    3263.0099486000004}, intermediate_values={1: 3263.0099486000004, 2: 3547.8298076},
    _distributions={''batch_size'': CategoricalDistribution(choices=(8, 16, 32, 64,
    128, 256, 512)), ''n_steps'': CategoricalDistribution(choices=(8, 16, 32, 64,
    128, 256, 512, 1024, 2048)), ''gamma'': CategoricalDistribution(choices=(0.9,
    0.95, 0.98, 0.99, 0.995, 0.999, 0.9999)), ''learning_rate'': FloatDistribution(high=1.0,
    log=True, low=1e-05, step=None), ''line_search_shrinking_factor'': CategoricalDistribution(choices=(0.6,
    0.7, 0.8, 0.9)), ''n_critic_updates'': CategoricalDistribution(choices=(5, 10,
    20, 25, 30)), ''cg_max_steps'': CategoricalDistribution(choices=(5, 10, 20, 25,
    30)), ''cg_damping'': CategoricalDistribution(choices=(0.5, 0.2, 0.1, 0.05, 0.01)),
    ''target_kl'': CategoricalDistribution(choices=(0.1, 0.05, 0.03, 0.02, 0.01, 0.005,
    0.001)), ''gae_lambda'': CategoricalDistribution(choices=(0.8, 0.9, 0.92, 0.95,
    0.98, 0.99, 1.0)), ''net_arch'': CategoricalDistribution(choices=(''small'', ''medium'')),
    ''log_std_init'': FloatDistribution(high=1.0, log=False, low=-4.0, step=None),
    ''sde_sample_freq'': CategoricalDistribution(choices=(-1, 8, 16, 32, 64, 128,
    256)), ''ortho_init'': CategoricalDistribution(choices=(False, True)), ''activation_fn'':
    CategoricalDistribution(choices=(''tanh'', ''relu'')), ''lr_schedule'': CategoricalDistribution(choices=(''linear'',
    ''constant'')), ''n_timesteps'': IntDistribution(high=1000000, log=False, low=100000,
    step=100000), ''n_envs'': CategoricalDistribution(choices=(2, 4, 6, 8, 10))},
    _trial_id=141'
Humanoid-v5:
  trial_number: 35
  value: 655.0684564000001
  params:
    batch_size: 512
    n_steps: 1024
    gamma: 0.98
    learning_rate: 0.0001001422334677667
    line_search_shrinking_factor: 0.7
    n_critic_updates: 25
    cg_max_steps: 25
    cg_damping: 0.5
    target_kl: 0.1
    gae_lambda: 0.99
    net_arch: small
    log_std_init: -1.1830649974937577
    sde_sample_freq: 128
    ortho_init: 0
    activation_fn: relu
    lr_schedule: linear
    n_timesteps: 700000
    n_envs: 2
  comment: 'Best trial details: _number=35, state=1, _values=[655.0684564000001],
    _datetime_start=2025-04-23 02:47:28.244927, datetime_complete=2025-04-23 07:59:52.699088,
    _params={''batch_size'': 512, ''n_steps'': 1024, ''gamma'': 0.98, ''learning_rate'':
    0.0001001422334677667, ''line_search_shrinking_factor'': 0.7, ''n_critic_updates'':
    25, ''cg_max_steps'': 25, ''cg_damping'': 0.5, ''target_kl'': 0.1, ''gae_lambda'':
    0.99, ''net_arch'': ''small'', ''log_std_init'': -1.1830649974937577, ''sde_sample_freq'':
    128, ''ortho_init'': False, ''activation_fn'': ''relu'', ''lr_schedule'': ''linear'',
    ''n_timesteps'': 700000, ''n_envs'': 2}, _user_attrs={}, _system_attrs={''completed_rung_0'':
    581.6288062, ''completed_rung_1'': 399.86959800000005, ''completed_rung_2'': 478.38803579999995},
    intermediate_values={1: 581.6288062, 2: 481.85881520000004, 3: 504.0086004000001,
    4: 399.86959800000005, 5: 336.16114200000004, 6: 507.72906220000004, 7: 391.9351242,
    8: 447.2668848, 9: 406.20743559999994, 10: 510.94909700000005, 11: 449.6569312,
    12: 351.9543068, 13: 458.8922734000001, 14: 580.6501824, 15: 479.95144600000003,
    16: 478.38803579999995, 17: 588.946696, 18: 615.1577226, 19: 593.3871734, 20:
    582.3725204, 21: 576.7446174, 22: 607.3036518, 23: 576.1680144, 24: 553.2418432,
    25: 637.1979595999999, 26: 625.1358292, 27: 617.4115076, 28: 599.3991022, 29:
    807.9073834000001, 30: 595.2735557999999, 31: 627.9958248, 32: 550.01969, 33:
    524.8137318, 34: 603.5826832, 35: 597.1883624, 36: 592.8152626, 37: 577.9192169999999,
    38: 630.254063, 39: 566.4785277999999, 40: 655.0684564000001}, _distributions={''batch_size'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512)), ''n_steps'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512, 1024, 2048)), ''gamma'':
    CategoricalDistribution(choices=(0.9, 0.95, 0.98, 0.99, 0.995, 0.999, 0.9999)),
    ''learning_rate'': FloatDistribution(high=1.0, log=True, low=1e-05, step=None),
    ''line_search_shrinking_factor'': CategoricalDistribution(choices=(0.6, 0.7, 0.8,
    0.9)), ''n_critic_updates'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)),
    ''cg_max_steps'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)), ''cg_damping'':
    CategoricalDistribution(choices=(0.5, 0.2, 0.1, 0.05, 0.01)), ''target_kl'': CategoricalDistribution(choices=(0.1,
    0.05, 0.03, 0.02, 0.01, 0.005, 0.001)), ''gae_lambda'': CategoricalDistribution(choices=(0.8,
    0.9, 0.92, 0.95, 0.98, 0.99, 1.0)), ''net_arch'': CategoricalDistribution(choices=(''small'',
    ''medium'')), ''log_std_init'': FloatDistribution(high=1.0, log=False, low=-4.0,
    step=None), ''sde_sample_freq'': CategoricalDistribution(choices=(-1, 8, 16, 32,
    64, 128, 256)), ''ortho_init'': CategoricalDistribution(choices=(False, True)),
    ''activation_fn'': CategoricalDistribution(choices=(''tanh'', ''relu'')), ''lr_schedule'':
    CategoricalDistribution(choices=(''linear'', ''constant'')), ''n_timesteps'':
    IntDistribution(high=1000000, log=False, low=100000, step=100000), ''n_envs'':
    CategoricalDistribution(choices=(2, 4, 6, 8, 10))}, _trial_id=35'
HumanoidStandup-v5:
  trial_number: 91
  value: 171862.15999820002
  params:
    batch_size: 64
    n_steps: 512
    gamma: 0.995
    learning_rate: 0.0002661447879672383
    line_search_shrinking_factor: 0.8
    n_critic_updates: 5
    cg_max_steps: 20
    cg_damping: 0.5
    target_kl: 0.005
    gae_lambda: 0.8
    net_arch: medium
    log_std_init: -1.3944767094748196
    sde_sample_freq: 32
    ortho_init: 1
    activation_fn: tanh
    lr_schedule: constant
    n_timesteps: 1000000
    n_envs: 8
  comment: 'Best trial details: _number=91, state=1, _values=[171862.15999820002],
    _datetime_start=2025-05-16 00:40:57.865305, datetime_complete=2025-05-16 01:12:29.962205,
    _params={''batch_size'': 64, ''n_steps'': 512, ''gamma'': 0.995, ''learning_rate'':
    0.0002661447879672383, ''line_search_shrinking_factor'': 0.8, ''n_critic_updates'':
    5, ''cg_max_steps'': 20, ''cg_damping'': 0.5, ''target_kl'': 0.005, ''gae_lambda'':
    0.8, ''net_arch'': ''medium'', ''log_std_init'': -1.3944767094748196, ''sde_sample_freq'':
    32, ''ortho_init'': True, ''activation_fn'': ''tanh'', ''lr_schedule'': ''constant'',
    ''n_timesteps'': 1000000, ''n_envs'': 8}, _user_attrs={}, _system_attrs={''completed_rung_0'':
    163955.36359259998}, intermediate_values={1: 163955.36359259998, 2: 171862.15999820002},
    _distributions={''batch_size'': CategoricalDistribution(choices=(8, 16, 32, 64,
    128, 256, 512)), ''n_steps'': CategoricalDistribution(choices=(8, 16, 32, 64,
    128, 256, 512, 1024, 2048)), ''gamma'': CategoricalDistribution(choices=(0.9,
    0.95, 0.98, 0.99, 0.995, 0.999, 0.9999)), ''learning_rate'': FloatDistribution(high=1.0,
    log=True, low=1e-05, step=None), ''line_search_shrinking_factor'': CategoricalDistribution(choices=(0.6,
    0.7, 0.8, 0.9)), ''n_critic_updates'': CategoricalDistribution(choices=(5, 10,
    20, 25, 30)), ''cg_max_steps'': CategoricalDistribution(choices=(5, 10, 20, 25,
    30)), ''cg_damping'': CategoricalDistribution(choices=(0.5, 0.2, 0.1, 0.05, 0.01)),
    ''target_kl'': CategoricalDistribution(choices=(0.1, 0.05, 0.03, 0.02, 0.01, 0.005,
    0.001)), ''gae_lambda'': CategoricalDistribution(choices=(0.8, 0.9, 0.92, 0.95,
    0.98, 0.99, 1.0)), ''net_arch'': CategoricalDistribution(choices=(''small'', ''medium'')),
    ''log_std_init'': FloatDistribution(high=1.0, log=False, low=-4.0, step=None),
    ''sde_sample_freq'': CategoricalDistribution(choices=(-1, 8, 16, 32, 64, 128,
    256)), ''ortho_init'': CategoricalDistribution(choices=(False, True)), ''activation_fn'':
    CategoricalDistribution(choices=(''tanh'', ''relu'')), ''lr_schedule'': CategoricalDistribution(choices=(''linear'',
    ''constant'')), ''n_timesteps'': IntDistribution(high=1000000, log=False, low=100000,
    step=100000), ''n_envs'': CategoricalDistribution(choices=(2, 4, 6, 8, 10))},
    _trial_id=91'
InvertedDoublePendulum-v5:
  trial_number: 29
  value: 9359.012380600001
  params:
    batch_size: 512
    n_steps: 128
    gamma: 0.995
    learning_rate: 0.000641801789987054
    line_search_shrinking_factor: 0.8
    n_critic_updates: 20
    cg_max_steps: 20
    cg_damping: 0.2
    target_kl: 0.005
    gae_lambda: 0.8
    net_arch: medium
    log_std_init: -1.1442557317275153
    sde_sample_freq: 64
    ortho_init: 0
    activation_fn: relu
    lr_schedule: constant
    n_timesteps: 200000
    n_envs: 8
  comment: 'Best trial details: _number=29, state=1, _values=[9359.012380600001],
    _datetime_start=2025-01-30 22:25:44.800729, datetime_complete=2025-01-30 23:00:33.460271,
    _params={''batch_size'': 512, ''n_steps'': 128, ''gamma'': 0.995, ''learning_rate'':
    0.000641801789987054, ''line_search_shrinking_factor'': 0.8, ''n_critic_updates'':
    20, ''cg_max_steps'': 20, ''cg_damping'': 0.2, ''target_kl'': 0.005, ''gae_lambda'':
    0.8, ''net_arch'': ''medium'', ''log_std_init'': -1.1442557317275153, ''sde_sample_freq'':
    64, ''ortho_init'': False, ''activation_fn'': ''relu'', ''lr_schedule'': ''constant'',
    ''n_timesteps'': 200000, ''n_envs'': 8}, _user_attrs={}, _system_attrs={''completed_rung_0'':
    9359.7917108}, intermediate_values={1: 9359.7917108, 2: 9359.012380600001}, _distributions={''batch_size'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512)), ''n_steps'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512, 1024, 2048)), ''gamma'':
    CategoricalDistribution(choices=(0.9, 0.95, 0.98, 0.99, 0.995, 0.999, 0.9999)),
    ''learning_rate'': FloatDistribution(high=1.0, log=True, low=1e-05, step=None),
    ''line_search_shrinking_factor'': CategoricalDistribution(choices=(0.6, 0.7, 0.8,
    0.9)), ''n_critic_updates'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)),
    ''cg_max_steps'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)), ''cg_damping'':
    CategoricalDistribution(choices=(0.5, 0.2, 0.1, 0.05, 0.01)), ''target_kl'': CategoricalDistribution(choices=(0.1,
    0.05, 0.03, 0.02, 0.01, 0.005, 0.001)), ''gae_lambda'': CategoricalDistribution(choices=(0.8,
    0.9, 0.92, 0.95, 0.98, 0.99, 1.0)), ''net_arch'': CategoricalDistribution(choices=(''small'',
    ''medium'')), ''log_std_init'': FloatDistribution(high=1.0, log=False, low=-4.0,
    step=None), ''sde_sample_freq'': CategoricalDistribution(choices=(-1, 8, 16, 32,
    64, 128, 256)), ''ortho_init'': CategoricalDistribution(choices=(False, True)),
    ''activation_fn'': CategoricalDistribution(choices=(''tanh'', ''relu'')), ''lr_schedule'':
    CategoricalDistribution(choices=(''linear'', ''constant'')), ''n_timesteps'':
    IntDistribution(high=1000000, log=False, low=100000, step=100000), ''n_envs'':
    CategoricalDistribution(choices=(2, 4, 6, 8, 10))}, _trial_id=29'
Reacher-v5:
  trial_number: 61
  value: -3.4638420000000005
  params:
    batch_size: 128
    n_steps: 512
    gamma: 0.95
    learning_rate: 0.001394119411763912
    line_search_shrinking_factor: 0.6
    n_critic_updates: 25
    cg_max_steps: 20
    cg_damping: 0.05
    target_kl: 0.005
    gae_lambda: 0.98
    net_arch: medium
    log_std_init: -1.3287770765988172
    sde_sample_freq: 16
    ortho_init: 1
    activation_fn: relu
    lr_schedule: constant
    n_timesteps: 900000
    n_envs: 6
  comment: 'Best trial details: _number=61, state=1, _values=[-3.4638420000000005],
    _datetime_start=2025-05-16 16:58:31.299559, datetime_complete=2025-05-16 17:35:21.510002,
    _params={''batch_size'': 128, ''n_steps'': 512, ''gamma'': 0.95, ''learning_rate'':
    0.001394119411763912, ''line_search_shrinking_factor'': 0.6, ''n_critic_updates'':
    25, ''cg_max_steps'': 20, ''cg_damping'': 0.05, ''target_kl'': 0.005, ''gae_lambda'':
    0.98, ''net_arch'': ''medium'', ''log_std_init'': -1.3287770765988172, ''sde_sample_freq'':
    16, ''ortho_init'': True, ''activation_fn'': ''relu'', ''lr_schedule'': ''constant'',
    ''n_timesteps'': 900000, ''n_envs'': 6}, _user_attrs={}, _system_attrs={''completed_rung_0'':
    -3.4359692}, intermediate_values={1: -3.4359692, 2: -3.4638420000000005}, _distributions={''batch_size'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512)), ''n_steps'':
    CategoricalDistribution(choices=(8, 16, 32, 64, 128, 256, 512, 1024, 2048)), ''gamma'':
    CategoricalDistribution(choices=(0.9, 0.95, 0.98, 0.99, 0.995, 0.999, 0.9999)),
    ''learning_rate'': FloatDistribution(high=1.0, log=True, low=1e-05, step=None),
    ''line_search_shrinking_factor'': CategoricalDistribution(choices=(0.6, 0.7, 0.8,
    0.9)), ''n_critic_updates'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)),
    ''cg_max_steps'': CategoricalDistribution(choices=(5, 10, 20, 25, 30)), ''cg_damping'':
    CategoricalDistribution(choices=(0.5, 0.2, 0.1, 0.05, 0.01)), ''target_kl'': CategoricalDistribution(choices=(0.1,
    0.05, 0.03, 0.02, 0.01, 0.005, 0.001)), ''gae_lambda'': CategoricalDistribution(choices=(0.8,
    0.9, 0.92, 0.95, 0.98, 0.99, 1.0)), ''net_arch'': CategoricalDistribution(choices=(''small'',
    ''medium'')), ''log_std_init'': FloatDistribution(high=1.0, log=False, low=-4.0,
    step=None), ''sde_sample_freq'': CategoricalDistribution(choices=(-1, 8, 16, 32,
    64, 128, 256)), ''ortho_init'': CategoricalDistribution(choices=(False, True)),
    ''activation_fn'': CategoricalDistribution(choices=(''tanh'', ''relu'')), ''lr_schedule'':
    CategoricalDistribution(choices=(''linear'', ''constant'')), ''n_timesteps'':
    IntDistribution(high=1000000, log=False, low=100000, step=100000), ''n_envs'':
    CategoricalDistribution(choices=(2, 4, 6, 8, 10))}, _trial_id=61'
Swimmer-v5:
  trial_number: 77
  value: 363.15103320000003
  params:
    batch_size: 32
    n_steps: 512
    gamma: 0.999
    learning_rate: 0.0008768499335035391
    line_search_shrinking_factor: 0.9
    n_critic_updates: 20
    cg_max_steps: 10
    cg_damping: 0.5
    target_kl: 0.01
    gae_lambda: 0.95
    net_arch: medium
    log_std_init: 0.26124051856567787
    sde_sample_freq: 32
    ortho_init: 0
    activation_fn: relu
    lr_schedule: constant
    n_timesteps: 900000
    n_envs: 6
  comment: 'Best trial details: _number=77, state=1, _values=[363.15103320000003],
    _datetime_start=2025-05-18 00:37:18.408741, datetime_complete=2025-05-18 02:04:20.814842,
    _params={''batch_size'': 32, ''n_steps'': 512, ''gamma'': 0.999, ''learning_rate'':
    0.0008768499335035391, ''line_search_shrinking_factor'': 0.9, ''n_critic_updates'':
    20, ''cg_max_steps'': 10, ''cg_damping'': 0.5, ''target_kl'': 0.01, ''gae_lambda'':
    0.95, ''net_arch'': ''medium'', ''log_std_init'': 0.26124051856567787, ''sde_sample_freq'':
    32, ''ortho_init'': False, ''activation_fn'': ''relu'', ''lr_schedule'': ''constant'',
    ''n_timesteps'': 900000, ''n_envs'': 6}, _user_attrs={}, _system_attrs={''completed_rung_0'':
    363.23125680000004}, intermediate_values={1: 363.23125680000004, 2: 363.15103320000003},
    _distributions={''batch_size'': CategoricalDistribution(choices=(8, 16, 32, 64,
    128, 256, 512)), ''n_steps'': CategoricalDistribution(choices=(8, 16, 32, 64,
    128, 256, 512, 1024, 2048)), ''gamma'': CategoricalDistribution(choices=(0.9,
    0.95, 0.98, 0.99, 0.995, 0.999, 0.9999)), ''learning_rate'': FloatDistribution(high=1.0,
    log=True, low=1e-05, step=None), ''line_search_shrinking_factor'': CategoricalDistribution(choices=(0.6,
    0.7, 0.8, 0.9)), ''n_critic_updates'': CategoricalDistribution(choices=(5, 10,
    20, 25, 30)), ''cg_max_steps'': CategoricalDistribution(choices=(5, 10, 20, 25,
    30)), ''cg_damping'': CategoricalDistribution(choices=(0.5, 0.2, 0.1, 0.05, 0.01)),
    ''target_kl'': CategoricalDistribution(choices=(0.1, 0.05, 0.03, 0.02, 0.01, 0.005,
    0.001)), ''gae_lambda'': CategoricalDistribution(choices=(0.8, 0.9, 0.92, 0.95,
    0.98, 0.99, 1.0)), ''net_arch'': CategoricalDistribution(choices=(''small'', ''medium'')),
    ''log_std_init'': FloatDistribution(high=1.0, log=False, low=-4.0, step=None),
    ''sde_sample_freq'': CategoricalDistribution(choices=(-1, 8, 16, 32, 64, 128,
    256)), ''ortho_init'': CategoricalDistribution(choices=(False, True)), ''activation_fn'':
    CategoricalDistribution(choices=(''tanh'', ''relu'')), ''lr_schedule'': CategoricalDistribution(choices=(''linear'',
    ''constant'')), ''n_timesteps'': IntDistribution(high=1000000, log=False, low=100000,
    step=100000), ''n_envs'': CategoricalDistribution(choices=(2, 4, 6, 8, 10))},
    _trial_id=77'
